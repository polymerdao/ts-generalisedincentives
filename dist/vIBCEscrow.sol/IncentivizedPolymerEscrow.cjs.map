{"version":3,"sources":["../../src/evm/contracts/vIBCEscrow.sol/IncentivizedPolymerEscrow.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumberish,\n  BytesLike,\n  FunctionFragment,\n  Result,\n  Interface,\n  EventFragment,\n  AddressLike,\n  ContractRunner,\n  ContractMethod,\n  Listener,\n} from \"ethers\";\nimport type {\n  TypedContractEvent,\n  TypedDeferredTopicFilter,\n  TypedEventLog,\n  TypedLogDescription,\n  TypedListener,\n  TypedContractMethod,\n} from \"../common\";\n\nexport type IbcEndpointStruct = { portId: string; channelId: BytesLike };\n\nexport type IbcEndpointStructOutput = [portId: string, channelId: string] & {\n  portId: string;\n  channelId: string;\n};\n\nexport type HeightStruct = {\n  revision_number: BigNumberish;\n  revision_height: BigNumberish;\n};\n\nexport type HeightStructOutput = [\n  revision_number: bigint,\n  revision_height: bigint\n] & { revision_number: bigint; revision_height: bigint };\n\nexport type IbcPacketStruct = {\n  src: IbcEndpointStruct;\n  dest: IbcEndpointStruct;\n  sequence: BigNumberish;\n  data: BytesLike;\n  timeoutHeight: HeightStruct;\n  timeoutTimestamp: BigNumberish;\n};\n\nexport type IbcPacketStructOutput = [\n  src: IbcEndpointStructOutput,\n  dest: IbcEndpointStructOutput,\n  sequence: bigint,\n  data: string,\n  timeoutHeight: HeightStructOutput,\n  timeoutTimestamp: bigint\n] & {\n  src: IbcEndpointStructOutput;\n  dest: IbcEndpointStructOutput;\n  sequence: bigint;\n  data: string;\n  timeoutHeight: HeightStructOutput;\n  timeoutTimestamp: bigint;\n};\n\nexport type AckPacketStruct = { success: boolean; data: BytesLike };\n\nexport type AckPacketStructOutput = [success: boolean, data: string] & {\n  success: boolean;\n  data: string;\n};\n\nexport declare namespace IMessageEscrowStructs {\n  export type IncentiveDescriptionStruct = {\n    maxGasDelivery: BigNumberish;\n    maxGasAck: BigNumberish;\n    refundGasTo: AddressLike;\n    priceOfDeliveryGas: BigNumberish;\n    priceOfAckGas: BigNumberish;\n    targetDelta: BigNumberish;\n  };\n\n  export type IncentiveDescriptionStructOutput = [\n    maxGasDelivery: bigint,\n    maxGasAck: bigint,\n    refundGasTo: string,\n    priceOfDeliveryGas: bigint,\n    priceOfAckGas: bigint,\n    targetDelta: bigint\n  ] & {\n    maxGasDelivery: bigint;\n    maxGasAck: bigint;\n    refundGasTo: string;\n    priceOfDeliveryGas: bigint;\n    priceOfAckGas: bigint;\n    targetDelta: bigint;\n  };\n}\n\nexport interface IncentivizedPolymerEscrowInterface extends Interface {\n  getFunction(\n    nameOrSignature:\n      | \"SEND_LOST_GAS_TO\"\n      | \"bounty\"\n      | \"connectedChannels\"\n      | \"convertEVMTo65\"\n      | \"dispatcher\"\n      | \"estimateAdditionalCost(bytes32)\"\n      | \"estimateAdditionalCost()\"\n      | \"implementationAddress\"\n      | \"implementationAddressHash\"\n      | \"increaseBounty\"\n      | \"isVerifiedMessageHash\"\n      | \"messageDelivered\"\n      | \"onAcknowledgementPacket\"\n      | \"onChanOpenAck\"\n      | \"onChanOpenConfirm\"\n      | \"onChanOpenInit\"\n      | \"onChanOpenTry\"\n      | \"onCloseIbcChannel\"\n      | \"onRecvPacket\"\n      | \"onTimeoutPacket\"\n      | \"owner\"\n      | \"processPacket\"\n      | \"proofValidPeriod\"\n      | \"recoverAck\"\n      | \"reemitAckMessage\"\n      | \"renounceOwnership\"\n      | \"setRemoteImplementation\"\n      | \"submitMessage\"\n      | \"supportedVersions\"\n      | \"thisBytes65\"\n      | \"timeoutMessage\"\n      | \"transferOwnership\"\n      | \"triggerChannelInit\"\n  ): FunctionFragment;\n\n  getEvent(\n    nameOrSignatureOrTopic:\n      | \"BountyClaimed\"\n      | \"BountyIncreased\"\n      | \"BountyPlaced\"\n      | \"MessageAcked\"\n      | \"MessageDelivered\"\n      | \"MessageTimedOut\"\n      | \"OwnershipTransferred\"\n      | \"RemoteImplementationSet\"\n      | \"TimeoutInitiated\"\n  ): EventFragment;\n\n  encodeFunctionData(\n    functionFragment: \"SEND_LOST_GAS_TO\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"bounty\",\n    values: [AddressLike, BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"connectedChannels\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"convertEVMTo65\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"dispatcher\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"estimateAdditionalCost(bytes32)\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"estimateAdditionalCost()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"implementationAddress\",\n    values: [AddressLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"implementationAddressHash\",\n    values: [AddressLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"increaseBounty\",\n    values: [AddressLike, BytesLike, BytesLike, BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isVerifiedMessageHash\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"messageDelivered\",\n    values: [BytesLike, BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onAcknowledgementPacket\",\n    values: [IbcPacketStruct, AckPacketStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onChanOpenAck\",\n    values: [BytesLike, BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onChanOpenConfirm\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onChanOpenInit\",\n    values: [BigNumberish, string[], string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onChanOpenTry\",\n    values: [BigNumberish, string[], BytesLike, string, BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onCloseIbcChannel\",\n    values: [BytesLike, string, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onRecvPacket\",\n    values: [IbcPacketStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onTimeoutPacket\",\n    values: [IbcPacketStruct]\n  ): string;\n  encodeFunctionData(functionFragment: \"owner\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"processPacket\",\n    values: [BytesLike, BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proofValidPeriod\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"recoverAck\",\n    values: [BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"reemitAckMessage\",\n    values: [BytesLike, BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"renounceOwnership\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRemoteImplementation\",\n    values: [BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"submitMessage\",\n    values: [\n      BytesLike,\n      BytesLike,\n      BytesLike,\n      IMessageEscrowStructs.IncentiveDescriptionStruct,\n      BigNumberish\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportedVersions\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"thisBytes65\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"timeoutMessage\",\n    values: [BytesLike, BytesLike, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferOwnership\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"triggerChannelInit\",\n    values: [string, BigNumberish, boolean, string[], string]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"SEND_LOST_GAS_TO\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"bounty\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"connectedChannels\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"convertEVMTo65\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"dispatcher\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"estimateAdditionalCost(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"estimateAdditionalCost()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"implementationAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"implementationAddressHash\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"increaseBounty\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isVerifiedMessageHash\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"messageDelivered\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onAcknowledgementPacket\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onChanOpenAck\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onChanOpenConfirm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onChanOpenInit\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onChanOpenTry\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onCloseIbcChannel\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onRecvPacket\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onTimeoutPacket\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"owner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"processPacket\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proofValidPeriod\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"recoverAck\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"reemitAckMessage\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceOwnership\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRemoteImplementation\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"submitMessage\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportedVersions\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"thisBytes65\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"timeoutMessage\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferOwnership\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"triggerChannelInit\",\n    data: BytesLike\n  ): Result;\n}\n\nexport namespace BountyClaimedEvent {\n  export type InputTuple = [\n    destinationImplementation: BytesLike,\n    chainIdentifier: BytesLike,\n    messageIdentifier: BytesLike,\n    gasSpentOnDestination: BigNumberish,\n    gasSpentOnSource: BigNumberish,\n    destinationRelayerReward: BigNumberish,\n    sourceRelayerReward: BigNumberish\n  ];\n  export type OutputTuple = [\n    destinationImplementation: string,\n    chainIdentifier: string,\n    messageIdentifier: string,\n    gasSpentOnDestination: bigint,\n    gasSpentOnSource: bigint,\n    destinationRelayerReward: bigint,\n    sourceRelayerReward: bigint\n  ];\n  export interface OutputObject {\n    destinationImplementation: string;\n    chainIdentifier: string;\n    messageIdentifier: string;\n    gasSpentOnDestination: bigint;\n    gasSpentOnSource: bigint;\n    destinationRelayerReward: bigint;\n    sourceRelayerReward: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace BountyIncreasedEvent {\n  export type InputTuple = [\n    messageIdentifier: BytesLike,\n    newDeliveryGasPrice: BigNumberish,\n    newAckGasPrice: BigNumberish\n  ];\n  export type OutputTuple = [\n    messageIdentifier: string,\n    newDeliveryGasPrice: bigint,\n    newAckGasPrice: bigint\n  ];\n  export interface OutputObject {\n    messageIdentifier: string;\n    newDeliveryGasPrice: bigint;\n    newAckGasPrice: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace BountyPlacedEvent {\n  export type InputTuple = [\n    destinationImplementation: BytesLike,\n    chainIdentifier: BytesLike,\n    messageIdentifier: BytesLike,\n    incentive: IMessageEscrowStructs.IncentiveDescriptionStruct\n  ];\n  export type OutputTuple = [\n    destinationImplementation: string,\n    chainIdentifier: string,\n    messageIdentifier: string,\n    incentive: IMessageEscrowStructs.IncentiveDescriptionStructOutput\n  ];\n  export interface OutputObject {\n    destinationImplementation: string;\n    chainIdentifier: string;\n    messageIdentifier: string;\n    incentive: IMessageEscrowStructs.IncentiveDescriptionStructOutput;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace MessageAckedEvent {\n  export type InputTuple = [\n    destinationImplementation: BytesLike,\n    chainIdentifier: BytesLike,\n    messageIdentifier: BytesLike\n  ];\n  export type OutputTuple = [\n    destinationImplementation: string,\n    chainIdentifier: string,\n    messageIdentifier: string\n  ];\n  export interface OutputObject {\n    destinationImplementation: string;\n    chainIdentifier: string;\n    messageIdentifier: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace MessageDeliveredEvent {\n  export type InputTuple = [\n    sourceImplementation: BytesLike,\n    chainIdentifier: BytesLike,\n    messageIdentifier: BytesLike\n  ];\n  export type OutputTuple = [\n    sourceImplementation: string,\n    chainIdentifier: string,\n    messageIdentifier: string\n  ];\n  export interface OutputObject {\n    sourceImplementation: string;\n    chainIdentifier: string;\n    messageIdentifier: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace MessageTimedOutEvent {\n  export type InputTuple = [\n    destinationImplementation: BytesLike,\n    chainIdentifier: BytesLike,\n    messageIdentifier: BytesLike\n  ];\n  export type OutputTuple = [\n    destinationImplementation: string,\n    chainIdentifier: string,\n    messageIdentifier: string\n  ];\n  export interface OutputObject {\n    destinationImplementation: string;\n    chainIdentifier: string;\n    messageIdentifier: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace OwnershipTransferredEvent {\n  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];\n  export type OutputTuple = [previousOwner: string, newOwner: string];\n  export interface OutputObject {\n    previousOwner: string;\n    newOwner: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RemoteImplementationSetEvent {\n  export type InputTuple = [\n    application: AddressLike,\n    chainIdentifier: BytesLike,\n    implementationAddressHash: BytesLike,\n    implementationAddress: BytesLike\n  ];\n  export type OutputTuple = [\n    application: string,\n    chainIdentifier: string,\n    implementationAddressHash: string,\n    implementationAddress: string\n  ];\n  export interface OutputObject {\n    application: string;\n    chainIdentifier: string;\n    implementationAddressHash: string;\n    implementationAddress: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace TimeoutInitiatedEvent {\n  export type InputTuple = [\n    sourceImplementation: BytesLike,\n    chainIdentifier: BytesLike,\n    messageIdentifier: BytesLike\n  ];\n  export type OutputTuple = [\n    sourceImplementation: string,\n    chainIdentifier: string,\n    messageIdentifier: string\n  ];\n  export interface OutputObject {\n    sourceImplementation: string;\n    chainIdentifier: string;\n    messageIdentifier: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport interface IncentivizedPolymerEscrow extends BaseContract {\n  connect(runner?: ContractRunner | null): IncentivizedPolymerEscrow;\n  waitForDeployment(): Promise<this>;\n\n  interface: IncentivizedPolymerEscrowInterface;\n\n  queryFilter<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n  queryFilter<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n\n  on<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  on<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  once<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  once<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  listeners<TCEvent extends TypedContractEvent>(\n    event: TCEvent\n  ): Promise<Array<TypedListener<TCEvent>>>;\n  listeners(eventName?: string): Promise<Array<Listener>>;\n  removeAllListeners<TCEvent extends TypedContractEvent>(\n    event?: TCEvent\n  ): Promise<this>;\n\n  SEND_LOST_GAS_TO: TypedContractMethod<[], [string], \"view\">;\n\n  bounty: TypedContractMethod<\n    [\n      fromApplication: AddressLike,\n      destinationIdentifier: BytesLike,\n      messageIdentifier: BytesLike\n    ],\n    [IMessageEscrowStructs.IncentiveDescriptionStructOutput],\n    \"view\"\n  >;\n\n  connectedChannels: TypedContractMethod<\n    [arg0: BigNumberish],\n    [string],\n    \"view\"\n  >;\n\n  convertEVMTo65: TypedContractMethod<\n    [evmAddress: AddressLike],\n    [string],\n    \"view\"\n  >;\n\n  dispatcher: TypedContractMethod<[], [string], \"view\">;\n\n  \"estimateAdditionalCost(bytes32)\": TypedContractMethod<\n    [arg0: BytesLike],\n    [[string, bigint] & { asset: string; amount: bigint }],\n    \"view\"\n  >;\n\n  \"estimateAdditionalCost()\": TypedContractMethod<\n    [],\n    [[string, bigint] & { asset: string; amount: bigint }],\n    \"view\"\n  >;\n\n  implementationAddress: TypedContractMethod<\n    [arg0: AddressLike, arg1: BytesLike],\n    [string],\n    \"view\"\n  >;\n\n  implementationAddressHash: TypedContractMethod<\n    [arg0: AddressLike, arg1: BytesLike],\n    [string],\n    \"view\"\n  >;\n\n  increaseBounty: TypedContractMethod<\n    [\n      fromApplication: AddressLike,\n      destinationIdentifier: BytesLike,\n      messageIdentifier: BytesLike,\n      deliveryGasPriceIncrease: BigNumberish,\n      ackGasPriceIncrease: BigNumberish\n    ],\n    [void],\n    \"payable\"\n  >;\n\n  isVerifiedMessageHash: TypedContractMethod<\n    [arg0: BytesLike],\n    [\n      [string, string] & {\n        chainIdentifier: string;\n        implementationIdentifier: string;\n      }\n    ],\n    \"view\"\n  >;\n\n  messageDelivered: TypedContractMethod<\n    [\n      sourceIdentifier: BytesLike,\n      sourceImplementationIdentifier: BytesLike,\n      messageIdentifier: BytesLike\n    ],\n    [string],\n    \"view\"\n  >;\n\n  onAcknowledgementPacket: TypedContractMethod<\n    [packet: IbcPacketStruct, ack: AckPacketStruct],\n    [void],\n    \"nonpayable\"\n  >;\n\n  onChanOpenAck: TypedContractMethod<\n    [channelId: BytesLike, arg1: BytesLike, counterpartyVersion: string],\n    [void],\n    \"nonpayable\"\n  >;\n\n  onChanOpenConfirm: TypedContractMethod<\n    [channelId: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  onChanOpenInit: TypedContractMethod<\n    [ordering: BigNumberish, arg1: string[], arg2: string, version: string],\n    [string],\n    \"view\"\n  >;\n\n  onChanOpenTry: TypedContractMethod<\n    [\n      ordering: BigNumberish,\n      arg1: string[],\n      channelId: BytesLike,\n      arg3: string,\n      arg4: BytesLike,\n      counterpartyVersion: string\n    ],\n    [string],\n    \"nonpayable\"\n  >;\n\n  onCloseIbcChannel: TypedContractMethod<\n    [channelId: BytesLike, arg1: string, arg2: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  onRecvPacket: TypedContractMethod<\n    [packet: IbcPacketStruct],\n    [AckPacketStructOutput],\n    \"nonpayable\"\n  >;\n\n  onTimeoutPacket: TypedContractMethod<\n    [packet: IbcPacketStruct],\n    [void],\n    \"nonpayable\"\n  >;\n\n  owner: TypedContractMethod<[], [string], \"view\">;\n\n  processPacket: TypedContractMethod<\n    [arg0: BytesLike, arg1: BytesLike, arg2: BytesLike],\n    [void],\n    \"payable\"\n  >;\n\n  proofValidPeriod: TypedContractMethod<\n    [destinationIdentifier: BytesLike],\n    [bigint],\n    \"view\"\n  >;\n\n  recoverAck: TypedContractMethod<\n    [messagingProtocolContext: BytesLike, rawMessage: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  reemitAckMessage: TypedContractMethod<\n    [arg0: BytesLike, arg1: BytesLike, arg2: BytesLike],\n    [void],\n    \"payable\"\n  >;\n\n  renounceOwnership: TypedContractMethod<[], [void], \"nonpayable\">;\n\n  setRemoteImplementation: TypedContractMethod<\n    [destinationIdentifier: BytesLike, implementation: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  submitMessage: TypedContractMethod<\n    [\n      destinationIdentifier: BytesLike,\n      destinationAddress: BytesLike,\n      message: BytesLike,\n      incentive: IMessageEscrowStructs.IncentiveDescriptionStruct,\n      deadline: BigNumberish\n    ],\n    [[bigint, string] & { gasRefund: bigint; messageIdentifier: string }],\n    \"payable\"\n  >;\n\n  supportedVersions: TypedContractMethod<\n    [arg0: BigNumberish],\n    [string],\n    \"view\"\n  >;\n\n  thisBytes65: TypedContractMethod<[], [string], \"view\">;\n\n  timeoutMessage: TypedContractMethod<\n    [arg0: BytesLike, arg1: BytesLike, arg2: BigNumberish, arg3: BytesLike],\n    [void],\n    \"payable\"\n  >;\n\n  transferOwnership: TypedContractMethod<\n    [newOwner: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  triggerChannelInit: TypedContractMethod<\n    [\n      version: string,\n      ordering: BigNumberish,\n      feeEnabled: boolean,\n      connectionHops: string[],\n      counterpartyPortId: string\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n\n  getFunction<T extends ContractMethod = ContractMethod>(\n    key: string | FunctionFragment\n  ): T;\n\n  getFunction(\n    nameOrSignature: \"SEND_LOST_GAS_TO\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"bounty\"\n  ): TypedContractMethod<\n    [\n      fromApplication: AddressLike,\n      destinationIdentifier: BytesLike,\n      messageIdentifier: BytesLike\n    ],\n    [IMessageEscrowStructs.IncentiveDescriptionStructOutput],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"connectedChannels\"\n  ): TypedContractMethod<[arg0: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"convertEVMTo65\"\n  ): TypedContractMethod<[evmAddress: AddressLike], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"dispatcher\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"estimateAdditionalCost(bytes32)\"\n  ): TypedContractMethod<\n    [arg0: BytesLike],\n    [[string, bigint] & { asset: string; amount: bigint }],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"estimateAdditionalCost()\"\n  ): TypedContractMethod<\n    [],\n    [[string, bigint] & { asset: string; amount: bigint }],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"implementationAddress\"\n  ): TypedContractMethod<\n    [arg0: AddressLike, arg1: BytesLike],\n    [string],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"implementationAddressHash\"\n  ): TypedContractMethod<\n    [arg0: AddressLike, arg1: BytesLike],\n    [string],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"increaseBounty\"\n  ): TypedContractMethod<\n    [\n      fromApplication: AddressLike,\n      destinationIdentifier: BytesLike,\n      messageIdentifier: BytesLike,\n      deliveryGasPriceIncrease: BigNumberish,\n      ackGasPriceIncrease: BigNumberish\n    ],\n    [void],\n    \"payable\"\n  >;\n  getFunction(\n    nameOrSignature: \"isVerifiedMessageHash\"\n  ): TypedContractMethod<\n    [arg0: BytesLike],\n    [\n      [string, string] & {\n        chainIdentifier: string;\n        implementationIdentifier: string;\n      }\n    ],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"messageDelivered\"\n  ): TypedContractMethod<\n    [\n      sourceIdentifier: BytesLike,\n      sourceImplementationIdentifier: BytesLike,\n      messageIdentifier: BytesLike\n    ],\n    [string],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"onAcknowledgementPacket\"\n  ): TypedContractMethod<\n    [packet: IbcPacketStruct, ack: AckPacketStruct],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"onChanOpenAck\"\n  ): TypedContractMethod<\n    [channelId: BytesLike, arg1: BytesLike, counterpartyVersion: string],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"onChanOpenConfirm\"\n  ): TypedContractMethod<[channelId: BytesLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"onChanOpenInit\"\n  ): TypedContractMethod<\n    [ordering: BigNumberish, arg1: string[], arg2: string, version: string],\n    [string],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"onChanOpenTry\"\n  ): TypedContractMethod<\n    [\n      ordering: BigNumberish,\n      arg1: string[],\n      channelId: BytesLike,\n      arg3: string,\n      arg4: BytesLike,\n      counterpartyVersion: string\n    ],\n    [string],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"onCloseIbcChannel\"\n  ): TypedContractMethod<\n    [channelId: BytesLike, arg1: string, arg2: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"onRecvPacket\"\n  ): TypedContractMethod<\n    [packet: IbcPacketStruct],\n    [AckPacketStructOutput],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"onTimeoutPacket\"\n  ): TypedContractMethod<[packet: IbcPacketStruct], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"owner\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"processPacket\"\n  ): TypedContractMethod<\n    [arg0: BytesLike, arg1: BytesLike, arg2: BytesLike],\n    [void],\n    \"payable\"\n  >;\n  getFunction(\n    nameOrSignature: \"proofValidPeriod\"\n  ): TypedContractMethod<[destinationIdentifier: BytesLike], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"recoverAck\"\n  ): TypedContractMethod<\n    [messagingProtocolContext: BytesLike, rawMessage: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"reemitAckMessage\"\n  ): TypedContractMethod<\n    [arg0: BytesLike, arg1: BytesLike, arg2: BytesLike],\n    [void],\n    \"payable\"\n  >;\n  getFunction(\n    nameOrSignature: \"renounceOwnership\"\n  ): TypedContractMethod<[], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"setRemoteImplementation\"\n  ): TypedContractMethod<\n    [destinationIdentifier: BytesLike, implementation: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"submitMessage\"\n  ): TypedContractMethod<\n    [\n      destinationIdentifier: BytesLike,\n      destinationAddress: BytesLike,\n      message: BytesLike,\n      incentive: IMessageEscrowStructs.IncentiveDescriptionStruct,\n      deadline: BigNumberish\n    ],\n    [[bigint, string] & { gasRefund: bigint; messageIdentifier: string }],\n    \"payable\"\n  >;\n  getFunction(\n    nameOrSignature: \"supportedVersions\"\n  ): TypedContractMethod<[arg0: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"thisBytes65\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"timeoutMessage\"\n  ): TypedContractMethod<\n    [arg0: BytesLike, arg1: BytesLike, arg2: BigNumberish, arg3: BytesLike],\n    [void],\n    \"payable\"\n  >;\n  getFunction(\n    nameOrSignature: \"transferOwnership\"\n  ): TypedContractMethod<[newOwner: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"triggerChannelInit\"\n  ): TypedContractMethod<\n    [\n      version: string,\n      ordering: BigNumberish,\n      feeEnabled: boolean,\n      connectionHops: string[],\n      counterpartyPortId: string\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n\n  getEvent(\n    key: \"BountyClaimed\"\n  ): TypedContractEvent<\n    BountyClaimedEvent.InputTuple,\n    BountyClaimedEvent.OutputTuple,\n    BountyClaimedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"BountyIncreased\"\n  ): TypedContractEvent<\n    BountyIncreasedEvent.InputTuple,\n    BountyIncreasedEvent.OutputTuple,\n    BountyIncreasedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"BountyPlaced\"\n  ): TypedContractEvent<\n    BountyPlacedEvent.InputTuple,\n    BountyPlacedEvent.OutputTuple,\n    BountyPlacedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"MessageAcked\"\n  ): TypedContractEvent<\n    MessageAckedEvent.InputTuple,\n    MessageAckedEvent.OutputTuple,\n    MessageAckedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"MessageDelivered\"\n  ): TypedContractEvent<\n    MessageDeliveredEvent.InputTuple,\n    MessageDeliveredEvent.OutputTuple,\n    MessageDeliveredEvent.OutputObject\n  >;\n  getEvent(\n    key: \"MessageTimedOut\"\n  ): TypedContractEvent<\n    MessageTimedOutEvent.InputTuple,\n    MessageTimedOutEvent.OutputTuple,\n    MessageTimedOutEvent.OutputObject\n  >;\n  getEvent(\n    key: \"OwnershipTransferred\"\n  ): TypedContractEvent<\n    OwnershipTransferredEvent.InputTuple,\n    OwnershipTransferredEvent.OutputTuple,\n    OwnershipTransferredEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RemoteImplementationSet\"\n  ): TypedContractEvent<\n    RemoteImplementationSetEvent.InputTuple,\n    RemoteImplementationSetEvent.OutputTuple,\n    RemoteImplementationSetEvent.OutputObject\n  >;\n  getEvent(\n    key: \"TimeoutInitiated\"\n  ): TypedContractEvent<\n    TimeoutInitiatedEvent.InputTuple,\n    TimeoutInitiatedEvent.OutputTuple,\n    TimeoutInitiatedEvent.OutputObject\n  >;\n\n  filters: {\n    \"BountyClaimed(bytes,bytes32,bytes32,uint64,uint64,uint128,uint128)\": TypedContractEvent<\n      BountyClaimedEvent.InputTuple,\n      BountyClaimedEvent.OutputTuple,\n      BountyClaimedEvent.OutputObject\n    >;\n    BountyClaimed: TypedContractEvent<\n      BountyClaimedEvent.InputTuple,\n      BountyClaimedEvent.OutputTuple,\n      BountyClaimedEvent.OutputObject\n    >;\n\n    \"BountyIncreased(bytes32,uint96,uint96)\": TypedContractEvent<\n      BountyIncreasedEvent.InputTuple,\n      BountyIncreasedEvent.OutputTuple,\n      BountyIncreasedEvent.OutputObject\n    >;\n    BountyIncreased: TypedContractEvent<\n      BountyIncreasedEvent.InputTuple,\n      BountyIncreasedEvent.OutputTuple,\n      BountyIncreasedEvent.OutputObject\n    >;\n\n    \"BountyPlaced(bytes,bytes32,bytes32,tuple)\": TypedContractEvent<\n      BountyPlacedEvent.InputTuple,\n      BountyPlacedEvent.OutputTuple,\n      BountyPlacedEvent.OutputObject\n    >;\n    BountyPlaced: TypedContractEvent<\n      BountyPlacedEvent.InputTuple,\n      BountyPlacedEvent.OutputTuple,\n      BountyPlacedEvent.OutputObject\n    >;\n\n    \"MessageAcked(bytes,bytes32,bytes32)\": TypedContractEvent<\n      MessageAckedEvent.InputTuple,\n      MessageAckedEvent.OutputTuple,\n      MessageAckedEvent.OutputObject\n    >;\n    MessageAcked: TypedContractEvent<\n      MessageAckedEvent.InputTuple,\n      MessageAckedEvent.OutputTuple,\n      MessageAckedEvent.OutputObject\n    >;\n\n    \"MessageDelivered(bytes,bytes32,bytes32)\": TypedContractEvent<\n      MessageDeliveredEvent.InputTuple,\n      MessageDeliveredEvent.OutputTuple,\n      MessageDeliveredEvent.OutputObject\n    >;\n    MessageDelivered: TypedContractEvent<\n      MessageDeliveredEvent.InputTuple,\n      MessageDeliveredEvent.OutputTuple,\n      MessageDeliveredEvent.OutputObject\n    >;\n\n    \"MessageTimedOut(bytes,bytes32,bytes32)\": TypedContractEvent<\n      MessageTimedOutEvent.InputTuple,\n      MessageTimedOutEvent.OutputTuple,\n      MessageTimedOutEvent.OutputObject\n    >;\n    MessageTimedOut: TypedContractEvent<\n      MessageTimedOutEvent.InputTuple,\n      MessageTimedOutEvent.OutputTuple,\n      MessageTimedOutEvent.OutputObject\n    >;\n\n    \"OwnershipTransferred(address,address)\": TypedContractEvent<\n      OwnershipTransferredEvent.InputTuple,\n      OwnershipTransferredEvent.OutputTuple,\n      OwnershipTransferredEvent.OutputObject\n    >;\n    OwnershipTransferred: TypedContractEvent<\n      OwnershipTransferredEvent.InputTuple,\n      OwnershipTransferredEvent.OutputTuple,\n      OwnershipTransferredEvent.OutputObject\n    >;\n\n    \"RemoteImplementationSet(address,bytes32,bytes32,bytes)\": TypedContractEvent<\n      RemoteImplementationSetEvent.InputTuple,\n      RemoteImplementationSetEvent.OutputTuple,\n      RemoteImplementationSetEvent.OutputObject\n    >;\n    RemoteImplementationSet: TypedContractEvent<\n      RemoteImplementationSetEvent.InputTuple,\n      RemoteImplementationSetEvent.OutputTuple,\n      RemoteImplementationSetEvent.OutputObject\n    >;\n\n    \"TimeoutInitiated(bytes,bytes32,bytes32)\": TypedContractEvent<\n      TimeoutInitiatedEvent.InputTuple,\n      TimeoutInitiatedEvent.OutputTuple,\n      TimeoutInitiatedEvent.OutputObject\n    >;\n    TimeoutInitiated: TypedContractEvent<\n      TimeoutInitiatedEvent.InputTuple,\n      TimeoutInitiatedEvent.OutputTuple,\n      TimeoutInitiatedEvent.OutputObject\n    >;\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}